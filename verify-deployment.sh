#!/bin/bash

# LDIF Converter Deployment Verification Script

echo "=== LDIF Docker Converter - Deployment Verification ==="
echo

# Check if Docker is running
echo "1. Checking Docker status..."
if ! docker info >/dev/null 2>&1; then
    echo "‚ùå Docker is not running"
    exit 1
fi
echo "‚úÖ Docker is running"

# Check if container is running
echo "2. Checking container status..."
if ! docker compose ps | grep -q "Up.*healthy"; then
    echo "‚ùå Container is not running or not healthy"
    echo "Run: docker compose up -d"
    exit 1
fi
echo "‚úÖ Container is running"

# Check health endpoint
echo "3. Testing health endpoint..."
HEALTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/health.html)
if [ "$HEALTH_STATUS" != "200" ]; then
    echo "‚ùå Health check failed (HTTP $HEALTH_STATUS)"
    exit 1
fi
echo "‚úÖ Health check passed"

# Check main application
echo "4. Testing main application..."
APP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080)
if [ "$APP_STATUS" != "200" ]; then
    echo "‚ùå Main application failed (HTTP $APP_STATUS)"
    exit 1
fi
echo "‚úÖ Main application accessible"

# Check for required content
echo "5. Verifying application content..."
if ! curl -s http://localhost:8080 | grep -q "LDIF.*Excel Converter"; then
    echo "‚ùå Application content verification failed"
    exit 1
fi
echo "‚úÖ Application content verified"

echo
echo "üéâ Deployment verification successful!"
echo "üìä LDIF Converter is ready at: http://localhost:8080"
echo
echo "Quick commands:"
echo "  ‚Ä¢ View logs:     docker compose logs -f"
echo "  ‚Ä¢ Stop app:      docker compose down"
echo "  ‚Ä¢ Restart app:   docker compose restart"
echo "  ‚Ä¢ Rebuild app:   docker compose up --build -d"
